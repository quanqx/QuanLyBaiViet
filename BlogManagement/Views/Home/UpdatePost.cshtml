@model BlogManagement.DAL.Entities.Post

@{
    ViewBag.Title = "UpdatePost";
    //Layout = "~/Views/Shared/_LayoutPage.cshtml";
}


@using (Html.BeginForm("UpdatePost", "Home", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Sửa bài viết</h4>
    </div>
    <div class="form-horizontal modal-body">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div style="display:none">
            @*hide div*@
            <div class="form-group">
                @Html.LabelFor(model => model.PostId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.DatePost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DatePost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DatePost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Likes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Likes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Likes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12" style="float:right">
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", style = "padding:20px;width:100%;padding-top:2%;height:200px",
               id = "txtContent", placeholder = "Nội dung" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="col-md-10" id="upload" style="float:right; display: flex;">
            <input class="btn btn-default" type="file" id="fileUpload2" name="fileUpload2" accept="image/*" onchange="previewFile2();" />
            <img id="img2" style="width:70px;height:70px;" />
        </div>
        <div class="form-group" style="margin:0 auto">
            <div class="col-md-offset-2 col-md-10">
                <div class="modal-footer">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>

    function previewFile2() {
        var file = $("#fileUpload2")[0].files[0];
        var reader = new FileReader();
        reader.onloadend = function () {
            $("#img2").attr("src", reader.result);
        }
        reader.readAsDataURL(file);
    }
</script>